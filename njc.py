#!/usr/bin/env python

# netperf-wrapper JSON to CSV converter
# Copyright (C) 2013 Electronics Research Group, University of Aberdeen
# 
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

import json
import sys
import argparse
import errno
import gzip

try:

    parser = argparse.ArgumentParser(description='Convert a netperf-wrapper json output into a CSV file.')
    parser.add_argument('-o', '--output', help='The output file for generated CSV data')
    headopts = parser.add_mutually_exclusive_group()
    headopts.add_argument('--headers', help='Produce headings for the CSV file (This is the default)', action="store_true")
    headopts.add_argument('-n', '--noheaders', help='Do not produce headings for the CSV file', action='store_true')
    parser.add_argument('-s', '--nastring', help='String to place into fields with no value (Default: blank)')
    parser.add_argument('filename', help='The JSON input file generated by netperf-wrapper')

    args = parser.parse_args()

    if args.filename == "-":
        file = sys.stdin
    else:
        if args.filename[-3:] == '.gz':
            file = gzip.open(args.filename)
        else:
            file = open(args.filename)

    if args.output == "-" or args.output == None:
        output = sys.stdout
    else:
        output = open(args.output, 'w')

    if args.nastring == None:
        nastring = u''
    else:
        nastring = args.nastring

    j = json.load(file)

    try:

    # Get the headers

        if not args.noheaders:
            c = u'"Timestamp",'
            for heading in j['results']:
                c += u',"' + heading + u'"'
            output.write(c + u'\n')

        # Get the values

        for rownum in range(0, len(j['x_values'])):
            c = str(j['x_values'][rownum]) + u','
            for heading in j['results']:
                value = str(j['results'][heading][rownum])
                if value == "None":
                    c += nastring + u','
                else:
                    c += value + u','
            output.write(c + u'\n')

        file.close()
        output.close()

    except IOError as e:
        if e.errno == errno.EPIPE:
            pass
        else:
            sys.stderr.write(e.message)

except KeyboardInterrupt:
    pass

